{
  "table页面_pgTable_and_skeletonPage_基础代码": {
    "prefix": "page_table_pgTable_and_skeletonPage",
    "body": [
      "<template>\r",
      "  <el-row :gutter='StyleEnum.ROW_GUTTER'>\r",
      "    <el-col :xs='StyleEnum.COL_XS' :sm='StyleEnum.COL_SM' :md='16' :lg='16' :xl='16'>\r",
      "      <PgTable :table-method='getPageHandle' :table-params='tableParams' ref='pgTable'>\r",
      "        <template v-slot:search>\r",
      "          <el-form ref='searchForm' :model='tableParams' label-position='left'>\r",
      "            <el-row :gutter='StyleEnum.ROW_GUTTER'>\r",
      "              $1??\r",
      "            </el-row>\r",
      "          </el-form>\r",
      "        </template>\r",
      "        <template v-slot:button>\r",
      "          <el-row :gutter='StyleEnum.ROW_GUTTER'>\r",
      "            <el-col :xs='StyleEnum.COL_XS' :sm='StyleEnum.COL_SM' :md='24' :lg='24' :xl='24'>\r",
      "              <el-button\r",
      "                type='primary'\r",
      "                v-if='filterPermission(\"xxx:xxx:view\")'\r",
      "                :size='StyleEnum.BUTTON_SIZE'\r",
      "                @click='pgTableQuery(tableParams)'\r",
      "              >\r",
      "                {{ $$t(\"table.search\") }}\r",
      "              </el-button>\r",
      "              <el-button\r",
      "                type='primary'\r",
      "                v-if='filterPermission(\"xxx:xxx:save\")'\r",
      "                :size='StyleEnum.BUTTON_SIZE'\r",
      "                @click='createHandle'\r",
      "              >\r",
      "                {{ $$t(\"table.create\") }}\r",
      "              </el-button>\r",
      "              <el-button :size='StyleEnum.BUTTON_SIZE' @click='pgTableResetHandle'>\r",
      "                {{ $$t(\"table.reset\") }}\r",
      "              </el-button>\r",
      "            </el-col>\r",
      "          </el-row>\r",
      "        </template>\r",
      "        <template v-slot:content>\r",
      "          $2??\r",
      "\r",
      "          <el-table-column :show-overflow-tooltip='true' :label='$$t(\"table.handle\")' width='120'>\r",
      "            <template #default='scope'>\r",
      "              <el-button\r",
      "                type='text'\r",
      "                v-if='filterPermission(\"xxx:xxx:update\")'\r",
      "                :size='StyleEnum.BUTTON_SIZE'\r",
      "                @click='updateHandle({ id: scope.row.id })'\r",
      "              >\r",
      "                {{ $$t(\"table.update\") }}\r",
      "              </el-button>\r",
      "              <el-button\r",
      "                type='text'\r",
      "                v-if='filterPermission(\"xxx:xxx:delete\")'\r",
      "                :size='StyleEnum.BUTTON_SIZE'\r",
      "                @click='deleteHandle([scope.row.id])'\r",
      "              >\r",
      "                {{ $$t(\"table.delete\") }}\r",
      "              </el-button>\r",
      "            </template>\r",
      "          </el-table-column>\r",
      "        </template>\r",
      "      </PgTable>\r",
      "    </el-col>\r",
      "    <el-col :xs='StyleEnum.COL_XS' :sm='StyleEnum.COL_SM' :md='8' :lg='8' :xl='8'>\r",
      "      <SkeletonPage ref='skeletonPage'>\r",
      "        <template v-slot:content>\r",
      "          <XXXForm $3??\r",
      "            ref='formPage'\r",
      "            :page-type='formPageType'\r",
      "            :page-params='formPageParams'\r",
      "            @show-skeleton='showSkeleton'\r",
      "            @hide-skeleton='hideSkeleton'\r",
      "            @update-table='pgTableQuery'\r",
      "          />\r",
      "        </template>\r",
      "      </SkeletonPage>\r",
      "    </el-col>\r",
      "  </el-row>\r",
      "</template>\r",
      "<script lang='ts'>\r",
      "// 基础支持\r",
      "import { defineComponent, ref, reactive } from 'vue'\r",
      "import { mapGetters } from 'vuex'\r",
      "import { StyleEnum } from '/@/enums/styleEnum'\r",
      "// components\r",
      "import { PgTable } from '/@/components/PgTable'\r",
      "import { SkeletonPage } from '/@/components/SkeletonPage'\r",
      "// hooks\r",
      "import useSkeletonPageComponent from '/@/hooks/component/skeletonPage'\r",
      "import usePgTableComponent from '/@/hooks/component/pgTable'\r",
      "import useFormPageComponent from '/@/hooks/component/formPage'\r",
      "// API封装\r",
      "// import useXXXRepository from './useXXXRepository' // 模板修改标记\r",
      "// mixin\r",
      "import tableMixin from '/@/mixins/tableMixin'\r",
      "// 表单页面\r",
      "import XXXForm from './form.vue'\r",
      "export default defineComponent({\r",
      "  name: 'XXX', // 模板修改标记\r",
      "  mixins: [tableMixin],\r",
      "  components: { PgTable, SkeletonPage, XXXForm }, // 模板修改标记\r",
      "  computed: {\r",
      "    ...mapGetters('permission', ['filterPermission']),\r",
      "    ...mapGetters('dict', ['getDictByType', 'getDictNameByValue'])\r",
      "  },\r",
      "  setup(props) {\r",
      "    // 约定，在页面直接使用的方法都以Handle结尾，子组件中的方法不以Handle作为结尾\r",
      "\r",
      "    // pgTable相关代码\r",
      "    const pgTable = ref(null)\r",
      "    const { pgTableQuery, pgTableReset } = usePgTableComponent(pgTable)\r",
      "\r",
      "    // 查询条件\r",
      "    const searchForm = ref(null)\r",
      "    const tableParams = reactive({\r",
      "      // 模板修改标记\r",
      "    })\r",
      "    // 重置方法\r",
      "    function pgTableResetHandle() {\r",
      "      searchForm.value.resetFields()\r",
      "      pgTableReset()\r",
      "    }\r",
      "\r",
      "    // API相关\r",
      "    // const { getPageHandle, deleteXXXByIdHandle } = useXXXRepository() // 模板修改标记\r",
      "\r",
      "    // formPage相关代码开始\r",
      "    const formPage = ref(null)\r",
      "    const { formPageType, formPageParams, formPageCreateHandle, formPageUpdateHandle } = useFormPageComponent(formPage)\r",
      "\r",
      "    // skeletonPage相关代码开始\r",
      "    const skeletonPage = ref(null)\r",
      "    const { showSkeleton, hideSkeleton } = useSkeletonPageComponent(skeletonPage)\r",
      "    // 创建\r",
      "    function createHandle() {\r",
      "      hideSkeleton()\r",
      "      formPageCreateHandle()\r",
      "    }\r",
      "    // 修改\r",
      "    function updateHandle(params: any) {\r",
      "      hideSkeleton()\r",
      "      formPageUpdateHandle(params)\r",
      "    }\r",
      "    // 删除\r",
      "    function deleteHandle(params: any) {\r",
      "      deleteXXXByIdHandle(params, () => {\r",
      "        // 模板修改标记\r",
      "        pgTableQuery(tableParams)\r",
      "        showSkeleton()\r",
      "      })\r",
      "    }\r",
      "\r",
      "    // 查询框初始化数据相关代码\r",
      "    // 模板修改标记 是否有初始化数据\r",
      "    // formPage相关代码开始\r",
      "\r",
      "    return {\r",
      "      // 基础支持\r",
      "      StyleEnum,\r",
      "      // pgTable组件相关\r",
      "      pgTable,\r",
      "      pgTableQuery,\r",
      "      // 查询form区域\r",
      "      searchForm,\r",
      "      tableParams,\r",
      "      pgTableResetHandle,\r",
      "      // skeletonPage组件\r",
      "      skeletonPage,\r",
      "      showSkeleton,\r",
      "      hideSkeleton,\r",
      "      // 查询相关基础数据及方法\r",
      "      // ?, // 模板修改标记 是否有初始化数据\r",
      "      formPage\r",
      "      formPageType,\r",
      "      formPageParams,\r",
      "      // API\r",
      "      // getPageHandle, // 模板修改标记 获取分页数据\r",
      "      // exportHandle // 模板修改标记 导出方法\r",
      "      createHandle,\r",
      "      updateHandle,\r",
      "      deleteHandle\r",
      "    }\r",
      "  }\r",
      "})\r",
      "</script>\r",
      ""
    ],
    "description": "table页面_pgTable_and_skeletonPage_基础代码"
  }
}
