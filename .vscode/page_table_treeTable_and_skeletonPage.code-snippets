{
  "table页面_treeTable_and_skeletonPage_基础代码": {
    "prefix": "page_table_treeTable_and_skeletonPage",
    "body": [
      "<template>\r",
      "  <el-row :gutter=\"StyleEnum.ROW_GUTTER\">\r",
      "    <el-col :xs=\"StyleEnum.COL_XS\" :sm=\"StyleEnum.COL_SM\" :md=\"16\" :lg=\"16\" :xl=\"16\">\r",
      "      <TreeTable :table-method=\"getXXXListHandle\" :table-params=\"tableParams\" ref=\"treeTable\">\r",
      "        <template v-slot:search>\r",
      "          <el-button type=\"primary\" v-if=\"filterPermission('xxx:xxx:save')\" :size=\"StyleEnum.BUTTON_SIZE\" @click=\"createHandle\">\r",
      "            {{ $$t('table.create') }}\r",
      "            <i class=\"el-icon-document-add\"></i>\r",
      "          </el-button>\r",
      "          <el-button type=\"primary\" :size=\"StyleEnum.BUTTON_SIZE\" @click=\"treeTableRefresh\">\r",
      "            {{ $$t('table.refresh') }}\r",
      "            <i class=\"el-icon-refresh\"></i>\r",
      "          </el-button>\r",
      "        </template>\r",
      "        <template v-slot:button></template>\r",
      "        <template v-slot:content>\r",
      "          ??$1\r",
      "          <el-table-column :show-overflow-tooltip=\"true\" :label=\"$$t('table.handle')\" width=\"120\">\r",
      "            <template #default=\"scope\">\r",
      "              <el-button\r",
      "                type=\"text\"\r",
      "                v-if=\"filterPermission('xxx:xxx:update')\"\r",
      "                :size=\"StyleEnum.BUTTON_SIZE\"\r",
      "                @click=\"updateHandle({ id: scope.row.id })\"\r",
      "              >\r",
      "                {{ $$t('table.update') }}\r",
      "              </el-button>\r",
      "              <el-button\r",
      "                type=\"text\"\r",
      "                v-if=\"filterPermission('xxx:xxx:delete')\"\r",
      "                :size=\"StyleEnum.BUTTON_SIZE\"\r",
      "                @click=\"deleteHandle({ id: scope.row.id })\"\r",
      "              >\r",
      "                {{ $$t('table.delete') }}\r",
      "              </el-button>\r",
      "            </template>\r",
      "          </el-table-column>\r",
      "        </template>\r",
      "      </TreeTable>\r",
      "    </el-col>\r",
      "    <el-col :xs=\"StyleEnum.COL_XS\" :sm=\"StyleEnum.COL_SM\" :md=\"8\" :lg=\"8\" :xl=\"8\">\r",
      "      <SkeletonPage ref=\"skeletonPage\">\r",
      "        <template v-slot:content>\r",
      "          <XXXForm ??$2\r",
      "            ref=\"formPage\"\r",
      "            :page-type=\"formPageType\"\r",
      "            :page-params=\"formPageParams\"\r",
      "            @show-skeleton=\"showSkeleton\"\r",
      "            @hide-skeleton=\"hideSkeleton\"\r",
      "            @update-table=\"treeTableRefresh\"\r",
      "          />\r",
      "        </template>\r",
      "      </SkeletonPage>\r",
      "    </el-col>\r",
      "  </el-row>\r",
      "</template>\r",
      "<script lang=\"ts\">\r",
      "// 基础支持\r",
      "import { defineComponent, ref, reactive } from 'vue'\r",
      "import { mapGetters } from 'vuex'\r",
      "import { StyleEnum } from '/@/enums/styleEnum'\r",
      "// components\r",
      "import { TreeTable } from '/@/components/TreeTable'\r",
      "import { SkeletonPage } from '/@/components/SkeletonPage'\r",
      "// hooks\r",
      "import useSkeletonPageComponent from '/@/hooks/component/skeletonPage'\r",
      "import useTreeTableComponent from '/@/hooks/component/treeTable'\r",
      "import useFormPageComponent from '/@/hooks/component/formPage'\r",
      "// API封装\r",
      "// import useXXXRepository from './useXXXRepository' // 模板修改标记\r",
      "// 表单页面\r",
      "import XXXForm from './form.vue'\r",
      "// mixin\r",
      "import treeTableMixin from '/@/mixins/treeTableMixin'\r",
      "export default defineComponent({\r",
      "  name: 'XXX',\r",
      "  mixins: [treeTableMixin],\r",
      "  components: {\r",
      "    TreeTable,\r",
      "    SkeletonPage,\r",
      "    XXXForm\r",
      "  },\r",
      "  computed: {\r",
      "    ...mapGetters('permission', ['filterPermission']),\r",
      "    ...mapGetters('dict', ['getDictByType', 'getDictNameByValue'])\r",
      "  },\r",
      "  setup(props) {\r",
      "    // treeTable相关代码开始\r",
      "    const treeTable = ref(null)\r",
      "    const { treeTableRefresh } = useTreeTableComponent(treeTable)\r",
      "    // 查询条件\r",
      "    const tableParams = reactive({})\r",
      "    // API相关\r",
      "    // const { getXXXListHandle, deleteXXXByIdHandle } = useXXXRepository() // 模板修改标记\r",
      "    // treeTable相关代码结束\r",
      "\r",
      "    // skeletonPage相关代码开始\r",
      "    const skeletonPage = ref(null)\r",
      "    const { showSkeleton, hideSkeleton } = useSkeletonPageComponent(skeletonPage)\r",
      "\r",
      "    // formPage相关代码开始\r",
      "    const formPage = ref(null)\r",
      "    const { formPageType, formPageParams, formPageCreateHandle, formPageUpdateHandle } = useFormPageComponent(formPage)\r",
      "\r",
      "    // 创建\r",
      "    function createHandle() {\r",
      "      hideSkeleton()\r",
      "      formPageCreateHandle()\r",
      "    }\r",
      "\r",
      "    // 修改\r",
      "    function updateHandle(params: any) {\r",
      "      hideSkeleton()\r",
      "      formPageUpdateHandle(params)\r",
      "    }\r",
      "\r",
      "    // 删除\r",
      "    function deleteHandle(params: any) {\r",
      "      deleteXXXByIdHandle(params, () => {\r",
      "        // 模板修改标记\r",
      "        treeTableRefresh()\r",
      "        showSkeleton()\r",
      "      })\r",
      "    }\r",
      "\r",
      "    return {\r",
      "      // 基础支持\r",
      "      StyleEnum,\r",
      "      // treeTable组件相关\r",
      "      treeTable,\r",
      "      treeTableRefresh,\r",
      "      // 查询条件\r",
      "      tableParams,\r",
      "      // skeletonPage组件\r",
      "      skeletonPage,\r",
      "      showSkeleton,\r",
      "      hideSkeleton,\r",
      "      // formPage\r",
      "      formPageType,\r",
      "      formPageParams,\r",
      "      // API相关\r",
      "      // getXXXListHandle, // 获取列表方法\r",
      "      // 当前页面提供的方法\r",
      "      createHandle,\r",
      "      updateHandle,\r",
      "      deleteHandle\r",
      "    }\r",
      "  }\r",
      "})\r",
      "</script>\r",
      ""
    ],
    "description": "table页面_pgTable_and_skeletonPage_基础代码"
  }
}
